{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { AuthService } from '../_services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/auth.service\";\nimport * as i2 from \"@angular/forms\";\nvar RegisterComponent = /** @class */function () {\n  function RegisterComponent(authService) {\n    this.authService = authService;\n    this.cancelRegister = new EventEmitter();\n    this.model = {};\n  }\n  RegisterComponent.prototype.ngOnInit = function () {};\n  RegisterComponent.prototype.register = function () {\n    this.authService.register(this.model).subscribe(function () {\n      console.log('Registeration Successful');\n    }, function (error) {\n      console.log('Failed to Register');\n    });\n  };\n  RegisterComponent.prototype.cancel = function () {\n    this.cancelRegister.emit(false);\n    console.log('cancelled');\n  };\n  RegisterComponent.ɵfac = function RegisterComponent_Factory(t) {\n    return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService));\n  };\n  RegisterComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RegisterComponent,\n    selectors: [[\"app-register\"]],\n    outputs: {\n      cancelRegister: \"cancelRegister\"\n    },\n    decls: 14,\n    vars: 2,\n    consts: [[3, \"ngSubmit\"], [\"registerForm\", \"ngForm\"], [1, \"text-center\", \"text-primary\"], [1, \"form-group\"], [\"type\", \"text\", \"required\", \"\", \"name\", \"username\", \"placeholder\", \"Username\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"required\", \"\", \"name\", \"password\", \"placeholder\", \"Password\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"form-group\", \"text-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"mr-2\"], [\"type\", \"button\", 1, \"btn\", \"btn-default\", 3, \"click\"]],\n    template: function RegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0, 1);\n        i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.register();\n        });\n        i0.ɵɵelementStart(2, \"h2\", 2);\n        i0.ɵɵtext(3, \"Sign Up\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"hr\");\n        i0.ɵɵelementStart(5, \"div\", 3)(6, \"input\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n          return ctx.model.username = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"input\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.model.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n        i0.ɵɵtext(11, \"Register\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function RegisterComponent_Template_button_click_12_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(13, \"Cancel\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngModel\", ctx.model.username);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.model.password);\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm]\n  });\n  return RegisterComponent;\n}();\nexport { RegisterComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}